name: Docker Image

on:
  push:
    tags:
      - "v*.*.*" # 触发条件：v1.1.0, v2.0.0 等格式的标签
  workflow_dispatch: # 允许手动触发
    inputs:
      tag:
        description: "Docker 镜像标签"
        required: false
        default: "latest"
        type: string
      push_to_registry:
        description: "是否推送到镜像注册表"
        required: false
        default: true
        type: boolean

env:
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: watch-docker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Docker Hub credentials
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ] || [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "❌ 错误: 缺少 Docker Hub 凭据"
            echo "请在仓库设置中添加以下 Secrets:"
            echo "- DOCKERHUB_USERNAME: 您的 Docker Hub 用户名"
            echo "- DOCKERHUB_TOKEN: 您的 Docker Hub 访问令牌"
            exit 1
          fi
          echo "✅ Docker Hub 凭据检查通过"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Extract version from tag
        id: extract_version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # 从 git tag 提取版本号 (v1.1.0 -> 1.1.0)
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=v$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            # 手动触发
            VERSION="${{ github.event.inputs.tag }}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$VERSION" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi
          echo "提取的版本号: $VERSION"

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ steps.extract_version.outputs.tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_to_registry != 'false') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.extract_version.outputs.version }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}

      - name: Generate build summary
        run: |
          echo "## 🐳 Docker 镜像构建完成" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 构建信息" >> $GITHUB_STEP_SUMMARY
          echo "- **版本**: ${{ steps.extract_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **标签**: ${{ steps.extract_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **架构**: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **触发方式**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **提交**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **推送目标**: Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏷️ 镜像标签" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "### 🚀 使用方法" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "# 从 Docker Hub 拉取镜像" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "# 或者使用 latest 标签" >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
